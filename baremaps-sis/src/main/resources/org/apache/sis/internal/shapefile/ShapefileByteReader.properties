# Assertion : Internal API problem : the calculated index from a record number has led to a under or overflow of the shapefile byte buffer.
#0,number : Record number asked for.
#1,number : Index position in the byte buffer that has been calculated from the record number.
#2 : Shapefile name.
#3 : Message returned by the MappedByteBuffer.position(index) method.
assert.wrong_position=[Internal API trouble] : While reading the shapefile {2}, ShapefileByteReader:setRowNum({0,number,#0}) method has made a wrong calculation with this record number that led it to buffer position {1,number,#0} invalid : "{3}".  

# Exception : the shapefile has no index, and cannot easily go to a given entry.
#0 : Shapefile name.
excp.no_direct_access=The shapefile {0} has no index and doesn't allow direct access.

# Exception : the given record number is below 1. 
#0 : Wrong record number.
#1 : Shapefile name.
excp.wrong_direct_access_before_start=The given record number {0} for direct access in the shapefile {1} is below its beginning (starting at 1).

# Exception : the given record number is after last (EOF). 
#0 : Wrong record number.
#1 : Shapefile name.
excp.wrong_direct_access_after_last=The given record number {0} for direct access in the shapefile {1} is after its end.

# Log : reading of the shapefile index is successful.
#0 : Shapefile index file name.
#1 : Number of entries indexed.
#2 : Main shapefile file name.
log.index_has_been_read=The shapefile index {0} has given {1,number} entries for the main shapefile {2}.

# Log : the Shapefile index given has not been found.
#0 : Wrong file location.
#1 : Related shapefile.
log.invalid_file_content_for_shapefile_index=The shapefile index given, {0}, has not been found. No Index will be used for reading the shapefile {1}.

# Log : the shapefile index has an invalid content.
#0 : Shapefile index file name that has an invalid content.
#1 : Cause of the problem.
log.no_shapefile_index_found_at_location=The shapefile index {0} has an invalid content and will be discarded : {1}.
