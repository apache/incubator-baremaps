openapi: 3.0.0
info:
  contact:
    email: dev@baremaps.apache.org
    name: Apache Baremaps OGC API
  description: "Apache Baremaps OGC API"
  license:
    name: OGC License
    url: http://www.opengeospatial.org/legal/
  title: Apache Baremaps OGC API
  version: "1.0"
servers:
  - description: Server
    url: https://localhost:9000
paths:
  /:
    get:
      operationId: getLandingPage
      parameters:
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                title: Buildings in Bonn
                description: Access to data about buildings in the city of Bonn via
                  a Web API that conforms to the OGC API Tiles specification.
                links:
                  - href: http://data.example.org/
                    rel: self
                    type: application/json
                    title: this document
                  - href: http://data.example.org/api
                    rel: service-desc
                    type: application/vnd.oai.openapi+json;version=3.0
                    title: the API definition
                  - href: http://data.example.org/api.html
                    rel: service-doc
                    type: text/html
                    title: the API documentation
                  - href: http://data.example.org/conformance
                    rel: conformance
                    type: application/json
                    title: OGC API conformance classes implemented by this service
                  - href: http://data.example.org/collections
                    rel: data
                    type: application/json
                    title: Information about the collections
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
          description: |-
            The landing page provides links to the API definition (link relation `service-desc`, in this case path `/api`),
            to the Conformance declaration (path `/conformance`, link relation `conformance`), and to the Collections of geospatial data (path `/collections`, link relation `data`).
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve the OGC API landing page for this service.
      tags:
        - Landing Page
  /conformance:
    get:
      operationId: getConformance
      parameters:
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConformance_200_response'
          description: The URIs of all conformance classes supported by the server
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve the set of OGC API conformance classes that are supported
        by this service.
      tags:
        - Conformance
  /collections:
    get:
      operationId: getCollectionsList
      parameters:
        - description: |-
            Either a date-time or an interval, half-bounded or bounded. Date and time expressions
            adhere to RFC 3339. Half-bounded intervals are expressed using double-dots.
            
            Examples:
            
            * A date-time: 2018-02-12T23:20:50Z
            * A bounded interval: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
            * Half-bounded intervals: 2018-02-12T00:00:00Z/.. or ../2018-03-18T12:31:12Z
            
            Only features that have a temporal property that intersects the value of
            `datetime` are selected.
            
            If a feature has multiple temporal properties, it is the decision of the
            server whether only a single temporal property is used to determine
            the extent or all relevant temporal properties.
          explode: false
          in: query
          name: datetime
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):
            * Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Minimum value, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Maximum value, coordinate axis 3 (optional)
            The coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.
            For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
            If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box.
            If a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.
          explode: false
          in: query
          name: bbox
          required: false
          schema:
            $ref: '#/components/schemas/getCollectionsList_bbox_parameter'
          style: form
        - description: |-
            The optional limit parameter limits the number of collections that are presented in the response document.
            Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.
            * Minimum = 1 * Maximum = 10000 * Default = 10
          explode: false
          in: query
          name: limit
          required: false
          schema:
            default: 10
            maximum: 10000
            minimum: 1
            type: integer
          style: form
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                links:
                  - href: http://data.example.org/collections.json
                    rel: self
                    type: application/json
                    title: this document
                  - href: http://data.example.org/collections.html
                    rel: alternate
                    type: text/html
                    title: this document as HTML
                  - href: http://schemas.example.org/1.0/buildings.xsd
                    rel: describedby
                    type: application/xml
                    title: GML application schema for Acme Corporation building data
                  - href: http://download.example.org/buildings.gpkg
                    rel: enclosure
                    type: application/geopackage+sqlite3
                    title: Bulk download (GeoPackage)
                    length: 472546
                collections:
                  - id: buildings
                    title: Buildings
                    description: Buildings in the city of Bonn.
                    extent:
                      spatial:
                        bbox:
                          - - 7.01
                            - 50.63
                            - 7.22
                            - 50.78
                      temporal:
                        interval:
                          - - 2010-02-15T12:34:56Z
                            - null
                    links:
                      - href: http://data.example.org/collections/buildings/items
                        rel: items
                        type: application/geo+json
                        title: Buildings
                      - href: http://data.example.org/collections/buildings/items.html
                        rel: items
                        type: text/html
                        title: Buildings
                      - href: https://creativecommons.org/publicdomain/zero/1.0/
                        rel: license
                        type: text/html
                        title: CC0-1.0
                      - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                        rel: license
                        type: application/rdf+xml
                        title: CC0-1.0
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
          description: |-
            The collections of (mostly geospatial) data available from this API. The dataset contains one or more collections. This resource provides information about and access to the collections. The response contains the list of collections. Each collection is accessible via one or more OGC API set of specifications, for which a link to relevant accessible resources, e.g. /collections/{collectionId}/(items, coverage, map, tiles...) is provided, with the corresponding relation type, as well as key information about the collection. This information includes:
            * a local identifier for the collection that is unique for the dataset;
            * a list of coordinate reference systems (CRS) in which data may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * an optional title and description for the collection;
            * an optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * for collections accessible via the Features or Records API, an optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      summary: Retrieve the list of geospatial data collections available from this
        service.
      tags:
        - Collections
  /collections/{collectionId}:
    get:
      operationId: getCollection
      parameters:
        - description: Local identifier of a collection
          in: path
          name: collectionId
          required: true
          schema:
            $ref: '#/components/schemas/all-collections'
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: buildings
                title: Buildings
                description: Buildings in the city of Bonn.
                extent:
                  spatial:
                    bbox:
                      - - 7.01
                        - 50.63
                        - 7.22
                        - 50.78
                  temporal:
                    interval:
                      - - 2010-02-15T12:34:56Z
                        - null
                links:
                  - href: http://data.example.org/collections/buildings/items
                    rel: items
                    type: application/geo+json
                    title: Buildings
                  - href: http://data.example.org/collections/buildings/items.html
                    rel: items
                    type: text/html
                    title: Buildings
                  - href: https://creativecommons.org/publicdomain/zero/1.0/
                    rel: license
                    type: text/html
                    title: CC0-1.0
                  - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                    rel: license
                    type: application/rdf+xml
                    title: CC0-1.0
              schema:
                $ref: '#/components/schemas/collectionInfo'
            text/html:
              schema:
                type: string
          description: |-
            Information about a particular collection of (mostly geospatial) data available from this API. The collection is accessible via one or more OGC API set of specifications, for which a link to relevant accessible resources, e.g. /collections/{collectionId}/(items, coverage, map, tiles...) is contained in the response, with the corresponding relation type, as well as key information about the collection. This information includes:
            * a local identifier for the collection that is unique for the dataset;
            * a list of coordinate reference systems (CRS) in which data may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * an optional title and description for the collection;
            * an optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * for collections accessible via the Features or Records API, an optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      summary: Retrieve the description of a collection available from this service.
      tags:
        - Collections
  /tiles:
    get:
      operationId: .dataset.vector.getTileSetsList
      parameters:
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_dataset_vector_getTileSetsList_200_response'
            text/html:
              schema:
                type: string
          description: List of available tilesets.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "The requested resource does not exist on the server. For example,\
            \ a path parameter had an incorrect value."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve a list of available vector tilesets for the dataset
      tags:
        - Vector Tiles
  /tiles/{tileMatrixSetId}:
    get:
      operationId: .dataset.vector.getTileSet
      parameters:
        - description: "The collections that should be included in the response. The\
          \ parameter value is a comma-separated list of collection identifiers. If\
          \ the parameters is missing, some or all collections will be included. The\
          \ collection will be rendered in the order specified, with the last one\
          \ showing on top, unless the priority is overridden by styling rules."
          explode: false
          in: query
          name: collections
          required: false
          schema:
            items:
              $ref: '#/components/schemas/all-collections'
            type: array
          style: form
        - allowEmptyValue: false
          description: Identifier for a supported TileMatrixSet
          in: path
          name: tileMatrixSetId
          required: true
          schema:
            $ref: '#/components/schemas/tileMatrixSets'
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tileSet'
            text/html:
              schema:
                type: string
          description: Description of the tileset
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "The requested resource does not exist on the server. For example,\
            \ a path parameter had an incorrect value."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve the vector tileset metadata for the whole dataset and the
        specified tiling scheme (tile matrix set)
      tags:
        - Vector Tiles
  /tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}:
    get:
      operationId: .dataset.vector.getTile
      parameters:
        - description: |-
            Identifier selecting one of the scales defined in the TileMatrixSet and representing the scaleDenominator the tile. For example,
            Ireland is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and tileCol=15.
          example: "5"
          in: path
          name: tileMatrix
          required: true
          schema:
            type: string
        - description: "Row index of the tile on the selected TileMatrix. It cannot\
          \ exceed the MatrixWidth-1 for the selected TileMatrix. For example, Ireland\
          \ is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and\
          \ tileCol=15."
          example: 10
          in: path
          name: tileRow
          required: true
          schema:
            minimum: 0
            type: integer
        - description: "Column index of the tile on the selected TileMatrix. It cannot\
          \ exceed the MatrixHeight-1 for the selected TileMatrix. For example, Ireland\
          \ is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and\
          \ tileCol=15."
          example: 15
          in: path
          name: tileCol
          required: true
          schema:
            minimum: 0
            type: integer
        - description: |-
            Either a date-time or an interval, half-bounded or bounded. Date and time expressions
            adhere to RFC 3339. Half-bounded intervals are expressed using double-dots.
            
            Examples:
            
            * A date-time: 2018-02-12T23:20:50Z
            * A bounded interval: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
            * Half-bounded intervals: 2018-02-12T00:00:00Z/.. or ../2018-03-18T12:31:12Z
            
            Only features that have a temporal property that intersects the value of
            `datetime` are selected.
            
            If a feature has multiple temporal properties, it is the decision of the
            server whether only a single temporal property is used to determine
            the extent or all relevant temporal properties.
          explode: false
          in: query
          name: datetime
          required: false
          schema:
            type: string
          style: form
        - description: "The collections that should be included in the response. The\
          \ parameter value is a comma-separated list of collection identifiers. If\
          \ the parameters is missing, some or all collections will be included. The\
          \ collection will be rendered in the order specified, with the last one\
          \ showing on top, unless the priority is overridden by styling rules."
          explode: false
          in: query
          name: collections
          required: false
          schema:
            items:
              $ref: '#/components/schemas/vectorTiles-collections'
            type: array
          style: form
        - description: |
            Retrieve only part of the data by slicing or trimming along one or more axis
            For trimming: {axisAbbrev}({low}:{high}) (preserves dimensionality)
               An asterisk (`*`) can be used instead of {low} or {high} to indicate the minimum/maximum value.
            For slicing:  {axisAbbrev}({value})      (reduces dimensionality)
          explode: false
          in: query
          name: subset
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: reproject the output to the given crs
          explode: true
          in: query
          name: crs
          required: false
          schema:
            type: string
          style: form
        - description: crs for the specified subset
          explode: true
          in: query
          name: subset-crs
          required: false
          schema:
            type: string
          style: form
        - allowEmptyValue: false
          description: Identifier for a supported TileMatrixSet
          in: path
          name: tileMatrixSetId
          required: true
          schema:
            $ref: '#/components/schemas/tileMatrixSets'
        - description: The format of the vector tile response (e.g. json). Accepted
            values are 'mvt' (Mapbox Vector Tiles) or 'json' (GeoJSON).
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - mvt
              - json
            type: string
          style: form
      responses:
        "200":
          content:
            application/vnd.mapbox-vector-tile:
              schema:
                format: binary
                type: string
            application/geo+json:
              schema:
                $ref: '#/components/schemas/_dataset_vector_getTile_200_response'
          description: A vector tile returned as a response.
        "204":
          description: No data available for this tile.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "The requested resource does not exist on the server. For example,\
            \ a path parameter had an incorrect value."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve a vector tile including one or more collections from the dataset.
      tags:
        - Vector Tiles
  /styles/{styleId}/tiles:
    get:
      operationId: .dataset.style.vector.getTileSetsList
      parameters:
        - allowEmptyValue: false
          description: An identifier representing a specific style.
          in: path
          name: styleId
          required: true
          schema:
            $ref: '#/components/schemas/styles'
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_dataset_vector_getTileSetsList_200_response'
            text/html:
              schema:
                type: string
          description: List of available tilesets.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "The requested resource does not exist on the server. For example,\
            \ a path parameter had an incorrect value."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve the list of vector tilesets intended for use with a specified
        style for the whole dataset
      tags:
        - Vector Tiles
  /styles/{styleId}/tiles/{tileMatrixSetId}:
    get:
      operationId: .dataset.style.vector.getTileSet
      parameters:
        - allowEmptyValue: false
          description: An identifier representing a specific style.
          in: path
          name: styleId
          required: true
          schema:
            $ref: '#/components/schemas/styles'
        - description: "The collections that should be included in the response. The\
          \ parameter value is a comma-separated list of collection identifiers. If\
          \ the parameters is missing, some or all collections will be included. The\
          \ collection will be rendered in the order specified, with the last one\
          \ showing on top, unless the priority is overridden by styling rules."
          explode: false
          in: query
          name: collections
          required: false
          schema:
            items:
              $ref: '#/components/schemas/all-collections'
            type: array
          style: form
        - allowEmptyValue: false
          description: Identifier for a supported TileMatrixSet
          in: path
          name: tileMatrixSetId
          required: true
          schema:
            $ref: '#/components/schemas/tileMatrixSets'
        - description: "The format of the response. If no value is provided, the accept\
          \ header is used to determine the format. Accepted values are 'json' or\
          \ 'html'."
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - json
              - html
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tileSet'
            text/html:
              schema:
                type: string
          description: Description of the tileset
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "The requested resource does not exist on the server. For example,\
            \ a path parameter had an incorrect value."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve a vector tileset intended for use with a specified style of
        the whole dataset for the specified tiling scheme (tile matrix set)
      tags:
        - Vector Tiles
  /styles/{styleId}/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}:
    get:
      operationId: .dataset.style.vector.getTile
      parameters:
        - description: |-
            Identifier selecting one of the scales defined in the TileMatrixSet and representing the scaleDenominator the tile. For example,
            Ireland is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and tileCol=15.
          example: "5"
          in: path
          name: tileMatrix
          required: true
          schema:
            type: string
        - description: "Row index of the tile on the selected TileMatrix. It cannot\
          \ exceed the MatrixWidth-1 for the selected TileMatrix. For example, Ireland\
          \ is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and\
          \ tileCol=15."
          example: 10
          in: path
          name: tileRow
          required: true
          schema:
            minimum: 0
            type: integer
        - description: "Column index of the tile on the selected TileMatrix. It cannot\
          \ exceed the MatrixHeight-1 for the selected TileMatrix. For example, Ireland\
          \ is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and\
          \ tileCol=15."
          example: 15
          in: path
          name: tileCol
          required: true
          schema:
            minimum: 0
            type: integer
        - description: |-
            Either a date-time or an interval, half-bounded or bounded. Date and time expressions
            adhere to RFC 3339. Half-bounded intervals are expressed using double-dots.
            
            Examples:
            
            * A date-time: 2018-02-12T23:20:50Z
            * A bounded interval: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
            * Half-bounded intervals: 2018-02-12T00:00:00Z/.. or ../2018-03-18T12:31:12Z
            
            Only features that have a temporal property that intersects the value of
            `datetime` are selected.
            
            If a feature has multiple temporal properties, it is the decision of the
            server whether only a single temporal property is used to determine
            the extent or all relevant temporal properties.
          explode: false
          in: query
          name: datetime
          required: false
          schema:
            type: string
          style: form
        - description: "The collections that should be included in the response. The\
          \ parameter value is a comma-separated list of collection identifiers. If\
          \ the parameters is missing, some or all collections will be included. The\
          \ collection will be rendered in the order specified, with the last one\
          \ showing on top, unless the priority is overridden by styling rules."
          explode: false
          in: query
          name: collections
          required: false
          schema:
            items:
              $ref: '#/components/schemas/vectorTiles-collections'
            type: array
          style: form
        - description: |
            Retrieve only part of the data by slicing or trimming along one or more axis
            For trimming: {axisAbbrev}({low}:{high}) (preserves dimensionality)
               An asterisk (`*`) can be used instead of {low} or {high} to indicate the minimum/maximum value.
            For slicing:  {axisAbbrev}({value})      (reduces dimensionality)
          explode: false
          in: query
          name: subset
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: reproject the output to the given crs
          explode: true
          in: query
          name: crs
          required: false
          schema:
            type: string
          style: form
        - description: crs for the specified subset
          explode: true
          in: query
          name: subset-crs
          required: false
          schema:
            type: string
          style: form
        - allowEmptyValue: false
          description: An identifier representing a specific style.
          in: path
          name: styleId
          required: true
          schema:
            $ref: '#/components/schemas/styles'
        - allowEmptyValue: false
          description: Identifier for a supported TileMatrixSet
          in: path
          name: tileMatrixSetId
          required: true
          schema:
            $ref: '#/components/schemas/tileMatrixSets'
        - description: The format of the vector tile response (e.g. json). Accepted
            values are 'mvt' (Mapbox Vector Tiles) or 'json' (GeoJSON).
          explode: false
          in: query
          name: f
          required: false
          schema:
            enum:
              - mvt
              - json
            type: string
          style: form
      responses:
        "200":
          content:
            application/vnd.mapbox-vector-tile:
              schema:
                format: binary
                type: string
            application/geo+json:
              schema:
                $ref: '#/components/schemas/_dataset_vector_getTile_200_response'
          description: A vector tile returned as a response.
        "204":
          description: No data available for this tile.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "The requested resource does not exist on the server. For example,\
            \ a path parameter had an incorrect value."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: "Content negotiation failed. For example, the `Accept` header\
            \ submitted in the request did not support any of the media types supported\
            \ by the server for the requested resource."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Retrieve vector tiles intended for use with a specified style
      tags:
        - Vector Tiles
components:
  parameters:
    f-metadata:
      description: "The format of the response. If no value is provided, the accept\
        \ header is used to determine the format. Accepted values are 'json' or 'html'."
      explode: false
      in: query
      name: f
      required: false
      schema:
        enum:
          - json
          - html
        type: string
      style: form
    collectionId-all:
      description: Local identifier of a collection
      in: path
      name: collectionId
      required: true
      schema:
        $ref: '#/components/schemas/all-collections'
    collectionId-coverage:
      allowEmptyValue: false
      description: Local identifier of a coverage collection
      explode: false
      in: path
      name: collectionId
      required: true
      schema:
        $ref: '#/components/schemas/coverage-collections'
      style: simple
    collectionId-vectorTiles:
      allowEmptyValue: false
      description: Local identifier of a vector tile collection
      in: path
      name: collectionId
      required: true
      schema:
        $ref: '#/components/schemas/vectorTiles-collections'
    collections:
      description: "The collections that should be included in the response. The parameter\
        \ value is a comma-separated list of collection identifiers. If the parameters\
        \ is missing, some or all collections will be included. The collection will\
        \ be rendered in the order specified, with the last one showing on top, unless\
        \ the priority is overridden by styling rules."
      explode: false
      in: query
      name: collections
      required: false
      schema:
        items:
          $ref: '#/components/schemas/all-collections'
        type: array
      style: form
    collections-coverage:
      description: "The collections that should be included in the response. The parameter\
        \ value is a comma-separated list of collection identifiers. If the parameters\
        \ is missing, some or all collections will be included. The collection will\
        \ be rendered in the order specified, with the last one showing on top, unless\
        \ the priority is overridden by styling rules."
      explode: false
      in: query
      name: collections
      required: false
      schema:
        items:
          $ref: '#/components/schemas/coverage-collections'
        type: array
      style: form
    collections-vectorTiles:
      description: "The collections that should be included in the response. The parameter\
        \ value is a comma-separated list of collection identifiers. If the parameters\
        \ is missing, some or all collections will be included. The collection will\
        \ be rendered in the order specified, with the last one showing on top, unless\
        \ the priority is overridden by styling rules."
      explode: false
      in: query
      name: collections
      required: false
      schema:
        items:
          $ref: '#/components/schemas/vectorTiles-collections'
        type: array
      style: form
    datetime:
      description: |-
        Either a date-time or an interval, half-bounded or bounded. Date and time expressions
        adhere to RFC 3339. Half-bounded intervals are expressed using double-dots.

        Examples:

        * A date-time: 2018-02-12T23:20:50Z
        * A bounded interval: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
        * Half-bounded intervals: 2018-02-12T00:00:00Z/.. or ../2018-03-18T12:31:12Z

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      explode: false
      in: query
      name: datetime
      required: false
      schema:
        type: string
      style: form
    subset:
      description: |
        Retrieve only part of the data by slicing or trimming along one or more axis
        For trimming: {axisAbbrev}({low}:{high}) (preserves dimensionality)
           An asterisk (`*`) can be used instead of {low} or {high} to indicate the minimum/maximum value.
        For slicing:  {axisAbbrev}({value})      (reduces dimensionality)
      explode: false
      in: query
      name: subset
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    crs:
      description: reproject the output to the given crs
      explode: true
      in: query
      name: crs
      required: false
      schema:
        type: string
      style: form
    subset-crs:
      description: crs for the specified subset
      explode: true
      in: query
      name: subset-crs
      required: false
      schema:
        type: string
      style: form
    tileMatrix:
      description: |-
        Identifier selecting one of the scales defined in the TileMatrixSet and representing the scaleDenominator the tile. For example,
        Ireland is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and tileCol=15.
      example: "5"
      in: path
      name: tileMatrix
      required: true
      schema:
        type: string
    tileRow:
      description: "Row index of the tile on the selected TileMatrix. It cannot exceed\
        \ the MatrixWidth-1 for the selected TileMatrix. For example, Ireland is fully\
        \ within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and tileCol=15."
      example: 10
      in: path
      name: tileRow
      required: true
      schema:
        minimum: 0
        type: integer
    tileCol:
      description: "Column index of the tile on the selected TileMatrix. It cannot\
        \ exceed the MatrixHeight-1 for the selected TileMatrix. For example, Ireland\
        \ is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and\
        \ tileCol=15."
      example: 15
      in: path
      name: tileCol
      required: true
      schema:
        minimum: 0
        type: integer
    tileMatrixSetId:
      allowEmptyValue: false
      description: Identifier for a supported TileMatrixSet
      in: path
      name: tileMatrixSetId
      required: true
      schema:
        $ref: '#/components/schemas/tileMatrixSets'
    f-mapTile:
      description: "The format of the map tile response (e.g. png). Accepted values\
        \ are 'png', 'jpg' or 'tiff' (GeoTIFF)."
      explode: false
      in: query
      name: f
      required: false
      schema:
        enum:
          - png
          - jpg
          - tiff
        type: string
      style: form
    f-vectorTile:
      description: The format of the vector tile response (e.g. json). Accepted values
        are 'mvt' (Mapbox Vector Tiles) or 'json' (GeoJSON).
      explode: false
      in: query
      name: f
      required: false
      schema:
        enum:
          - mvt
          - json
        type: string
      style: form
    f-coverageTile:
      description: "The format of the coverage tile response (e.g. tiff). Accepted\
        \ values are 'tiff' (GeoTIFF), 'netcdf', or 'png'."
      explode: false
      in: query
      name: f
      required: false
      schema:
        enum:
          - tiff
          - netcdf
          - png
        type: string
      style: form
    bgcolor:
      description: "Web color name or hexadecimal 0x[AA]RRGGBB color value for the\
        \ background color (default to 0x9C9C9C gray). If alpha is not specified,\
        \ full opacity is assumed."
      explode: false
      in: query
      name: bgcolor
      required: false
      schema:
        default: 0xFFFFFF
        type: string
      style: form
    transparent:
      description: Background transparency of map (default=true).
      explode: false
      in: query
      name: transparent
      required: false
      schema:
        default: true
        type: boolean
      style: form
    styleId:
      allowEmptyValue: false
      description: An identifier representing a specific style.
      in: path
      name: styleId
      required: true
      schema:
        $ref: '#/components/schemas/styles'
    styleId-collection:
      allowEmptyValue: false
      description: An identifier representing a specific style.
      in: path
      name: styleId
      required: true
      schema:
        type: string
    bbox:
      description: |-
        Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):
        * Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Minimum value, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Maximum value, coordinate axis 3 (optional)
        The coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.
        For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box.
        If a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.
      explode: false
      in: query
      name: bbox
      required: false
      schema:
        $ref: '#/components/schemas/getCollectionsList_bbox_parameter'
      style: form
    limit-collections:
      description: |-
        The optional limit parameter limits the number of collections that are presented in the response document.
        Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.
        * Minimum = 1 * Maximum = 10000 * Default = 10
      explode: false
      in: query
      name: limit
      required: false
      schema:
        default: 10
        maximum: 10000
        minimum: 1
        type: integer
      style: form
  responses:
    NotFound:
      $ref: '#/components/responses/rNotFound'
    NotAcceptable:
      $ref: '#/components/responses/rNotAcceptable'
    ServerError:
      $ref: '#/components/responses/rServerError'
    InvalidParameter:
      $ref: '#/components/responses/rInvalidParameter'
    Exception:
      $ref: '#/components/responses/rException'
    LandingPage:
      $ref: '#/components/responses/rLandingPage'
    Conformance:
      $ref: '#/components/responses/rConformance'
    API:
      $ref: '#/components/responses/rAPI'
    Enumeration:
      $ref: '#/components/responses/rEnumeration'
    CollectionsList:
      $ref: '#/components/responses/rCollectionsList'
    Collection:
      $ref: '#/components/responses/rCollection'
    TileSetsList:
      $ref: '#/components/responses/rTileSetsList'
    TileSet:
      $ref: '#/components/responses/rTileSet'
    MapTile:
      $ref: '#/components/responses/rMapTile'
    CoverageTile:
      $ref: '#/components/responses/rCoverageTile'
    VectorTile:
      $ref: '#/components/responses/rVectorTile'
    EmptyTile:
      $ref: '#/components/responses/rEmptyTile'
    TileMatrixSetsList:
      $ref: '#/components/responses/rTileMatrixSetsList'
    TileMatrixSet:
      $ref: '#/components/responses/rTileMatrixSet'
    rLandingPage:
      content:
        application/json:
          example:
            title: Buildings in Bonn
            description: Access to data about buildings in the city of Bonn via a
              Web API that conforms to the OGC API Tiles specification.
            links:
              - href: http://data.example.org/
                rel: self
                type: application/json
                title: this document
              - href: http://data.example.org/api
                rel: service-desc
                type: application/vnd.oai.openapi+json;version=3.0
                title: the API definition
              - href: http://data.example.org/api.html
                rel: service-doc
                type: text/html
                title: the API documentation
              - href: http://data.example.org/conformance
                rel: conformance
                type: application/json
                title: OGC API conformance classes implemented by this service
              - href: http://data.example.org/collections
                rel: data
                type: application/json
                title: Information about the collections
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
      description: |-
        The landing page provides links to the API definition (link relation `service-desc`, in this case path `/api`),
        to the Conformance declaration (path `/conformance`, link relation `conformance`), and to the Collections of geospatial data (path `/collections`, link relation `data`).
    rNotAcceptable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: "Content negotiation failed. For example, the `Accept` header submitted\
        \ in the request did not support any of the media types supported by the server\
        \ for the requested resource."
    rServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: A server error occurred.
    rConformance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getConformance_200_response'
      description: The URIs of all conformance classes supported by the server
    rAPI:
      content:
        application/vnd.oai.openapi+json;version=3.0:
          schema:
            type: object
        text/html:
          schema:
            type: string
      description: The OpenAPI definition of the API.
    rEnumeration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/enumeration'
        text/html:
          schema:
            type: string
      description: An enumerated list of valid string values for API parameters.
    rNotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: "The requested resource does not exist on the server. For example,\
        \ a path parameter had an incorrect value."
    rCollectionsList:
      content:
        application/json:
          example:
            links:
              - href: http://data.example.org/collections.json
                rel: self
                type: application/json
                title: this document
              - href: http://data.example.org/collections.html
                rel: alternate
                type: text/html
                title: this document as HTML
              - href: http://schemas.example.org/1.0/buildings.xsd
                rel: describedby
                type: application/xml
                title: GML application schema for Acme Corporation building data
              - href: http://download.example.org/buildings.gpkg
                rel: enclosure
                type: application/geopackage+sqlite3
                title: Bulk download (GeoPackage)
                length: 472546
            collections:
              - id: buildings
                title: Buildings
                description: Buildings in the city of Bonn.
                extent:
                  spatial:
                    bbox:
                      - - 7.01
                        - 50.63
                        - 7.22
                        - 50.78
                  temporal:
                    interval:
                      - - 2010-02-15T12:34:56Z
                        - null
                links:
                  - href: http://data.example.org/collections/buildings/items
                    rel: items
                    type: application/geo+json
                    title: Buildings
                  - href: http://data.example.org/collections/buildings/items.html
                    rel: items
                    type: text/html
                    title: Buildings
                  - href: https://creativecommons.org/publicdomain/zero/1.0/
                    rel: license
                    type: text/html
                    title: CC0-1.0
                  - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                    rel: license
                    type: application/rdf+xml
                    title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string
      description: |-
        The collections of (mostly geospatial) data available from this API. The dataset contains one or more collections. This resource provides information about and access to the collections. The response contains the list of collections. Each collection is accessible via one or more OGC API set of specifications, for which a link to relevant accessible resources, e.g. /collections/{collectionId}/(items, coverage, map, tiles...) is provided, with the corresponding relation type, as well as key information about the collection. This information includes:
        * a local identifier for the collection that is unique for the dataset;
        * a list of coordinate reference systems (CRS) in which data may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * an optional title and description for the collection;
        * an optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * for collections accessible via the Features or Records API, an optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
    rCollection:
      content:
        application/json:
          example:
            id: buildings
            title: Buildings
            description: Buildings in the city of Bonn.
            extent:
              spatial:
                bbox:
                  - - 7.01
                    - 50.63
                    - 7.22
                    - 50.78
              temporal:
                interval:
                  - - 2010-02-15T12:34:56Z
                    - null
            links:
              - href: http://data.example.org/collections/buildings/items
                rel: items
                type: application/geo+json
                title: Buildings
              - href: http://data.example.org/collections/buildings/items.html
                rel: items
                type: text/html
                title: Buildings
              - href: https://creativecommons.org/publicdomain/zero/1.0/
                rel: license
                type: text/html
                title: CC0-1.0
              - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                rel: license
                type: application/rdf+xml
                title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collectionInfo'
        text/html:
          schema:
            type: string
      description: |-
        Information about a particular collection of (mostly geospatial) data available from this API. The collection is accessible via one or more OGC API set of specifications, for which a link to relevant accessible resources, e.g. /collections/{collectionId}/(items, coverage, map, tiles...) is contained in the response, with the corresponding relation type, as well as key information about the collection. This information includes:
        * a local identifier for the collection that is unique for the dataset;
        * a list of coordinate reference systems (CRS) in which data may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * an optional title and description for the collection;
        * an optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * for collections accessible via the Features or Records API, an optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
    rTileMatrixSetsList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getTileMatrixSetsList_200_response'
        text/html:
          schema:
            type: string
      description: List of tile matrix sets (tiling schemes).
    rTileMatrixSet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tileMatrixSet'
      description: tile matrix set
    rTileSetsList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_dataset_vector_getTileSetsList_200_response'
        text/html:
          schema:
            type: string
      description: List of available tilesets.
    rTileSet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tileSet'
        text/html:
          schema:
            type: string
      description: Description of the tileset
    rVectorTile:
      content:
        application/vnd.mapbox-vector-tile:
          schema:
            format: binary
            type: string
        application/geo+json:
          schema:
            $ref: '#/components/schemas/_dataset_vector_getTile_200_response'
      description: A vector tile returned as a response.
    rEmptyTile:
      description: No data available for this tile.
    rCoverageTile:
      content:
        application/netcdf:
          schema:
            format: binary
            type: string
        image/tiff; application=geotiff:
          schema:
            format: binary
            type: string
      description: A coverage tile returned as a response.
    rMapTile:
      content:
        image/png:
          schema:
            format: binary
            type: string
        image/jpeg:
          schema:
            format: binary
            type: string
        image/tiff; application=geotiff:
          schema:
            format: binary
            type: string
      description: A map tile image returned as a response.
    rInvalidParameter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: A query parameter has an invalid value.
    rException:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: An error occured.
  schemas:
    confClasses:
      properties:
        conformsTo:
          items:
            type: string
          type: array
      required:
        - conformsTo
      type: object
    link:
      example:
        varBase: /ogcapi/vars/
        hreflang: en
        templated: true
        rel: alternate
        length: 0
        href: http://data.example.com/buildings/123
        type: application/geo+json
        title: "Trierer Strasse 70, 53115 Bonn"
      properties:
        href:
          description: Supplies the URI to a remote resource (or resource fragment).
          example: http://data.example.com/buildings/123
          type: string
        rel:
          description: The type or semantics of the relation.
          example: alternate
          type: string
        type:
          description: A hint indicating what the media type of the result of dereferencing
            the link should be.
          example: application/geo+json
          type: string
        templated:
          description: This flag set to true if the link is a URL template.
          type: boolean
        varBase:
          description: A base path to retrieve semantic information about the variables
            used in URL template.
          example: /ogcapi/vars/
          type: string
        hreflang:
          description: A hint indicating what the language of the result of dereferencing
            the link should be.
          example: en
          type: string
        title:
          description: Used to label the destination of a link such that it can be
            used as a human-readable identifier.
          example: "Trierer Strasse 70, 53115 Bonn"
          type: string
        length:
          type: integer
      required:
        - href
        - rel
      type: object
    landingPage:
      example:
        attribution: attribution
        description: Access to data about buildings in the city of Bonn via a Web
          API that conforms to the OGC API Common specification.
        links:
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
        title: Buildings in Bonn
      properties:
        title:
          description: "While a title is not required, implementors are strongly advised\
            \ to include one."
          example: Buildings in Bonn
          title: The title of the API.
          type: string
        description:
          example: Access to data about buildings in the city of Bonn via a Web API
            that conforms to the OGC API Common specification.
          type: string
        attribution:
          description: "The `attribution` should be short and intended for presentation\
            \ to a user, for example, in a corner of a map. Parts of the text can\
            \ be links to other resources if additional information is needed. The\
            \ string can include HTML markup."
          title: attribution for the API
          type: string
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
        - links
      type: object
    exception:
      description: JSON schema for exceptions based on RFC 7807
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
      required:
        - type
      title: Exception Schema
      type: object
    collections:
      example:
        timeStamp: 2000-01-23T04:56:07.000+00:00
        collections:
          - extent: null
            itemType: unknown
            crs:
              - http://www.opengis.net/def/crs/OGC/1.3/CRS84
              - http://www.opengis.net/def/crs/EPSG/0/4326
            dataType: null
            description: A Digital Elevation Model.
            title: Digital Elevation Model
            maxScaleDenominator: 1.4658129805029452
            minScaleDenominator: 6.027456183070403
            geometryDimension: 0
            maxCellSize: 5.637376656633329
            links:
              - href: http://data.example.org/collections/dem?f=json
                rel: self
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem?f=html
                rel: alternate
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage
                rel: coverage
                type: image/tiff; application=geotiff
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage/domainset
                rel: domainset
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage/rangetype
                rel: rangetype
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage/metadata
                rel: metadata
                type: application/json
                title: Digital Elevation Model
            minCellSize: 5.962133916683182
            id: dem
          - extent: null
            itemType: unknown
            crs:
              - http://www.opengis.net/def/crs/OGC/1.3/CRS84
              - http://www.opengis.net/def/crs/EPSG/0/4326
            dataType: null
            description: A Digital Elevation Model.
            title: Digital Elevation Model
            maxScaleDenominator: 1.4658129805029452
            minScaleDenominator: 6.027456183070403
            geometryDimension: 0
            maxCellSize: 5.637376656633329
            links:
              - href: http://data.example.org/collections/dem?f=json
                rel: self
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem?f=html
                rel: alternate
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage
                rel: coverage
                type: image/tiff; application=geotiff
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage/domainset
                rel: domainset
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage/rangetype
                rel: rangetype
                type: application/json
                title: Digital Elevation Model
              - href: http://data.example.org/collections/dem/coverage/metadata
                rel: metadata
                type: application/json
                title: Digital Elevation Model
            minCellSize: 5.962133916683182
            id: dem
        numberReturned: 1
        links:
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
        numberMatched: 1
      properties:
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
        timeStamp:
          format: date-time
          type: string
        numberMatched:
          example: 1
          minimum: 0
          type: integer
        numberReturned:
          example: 1
          minimum: 0
          type: integer
        collections:
          items:
            $ref: '#/components/schemas/collectionInfo'
          type: array
      required:
        - collections
        - links
      type: object
    collectionInfo:
      example:
        extent: null
        itemType: unknown
        crs:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
        dataType: null
        description: A Digital Elevation Model.
        title: Digital Elevation Model
        maxScaleDenominator: 1.4658129805029452
        minScaleDenominator: 6.027456183070403
        geometryDimension: 0
        maxCellSize: 5.637376656633329
        links:
          - href: http://data.example.org/collections/dem?f=json
            rel: self
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem?f=html
            rel: alternate
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage
            rel: coverage
            type: image/tiff; application=geotiff
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage/domainset
            rel: domainset
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage/rangetype
            rel: rangetype
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage/metadata
            rel: metadata
            type: application/json
            title: Digital Elevation Model
        minCellSize: 5.962133916683182
        id: dem
      properties:
        id:
          description: "identifier of the collection used, for example, in URIs"
          example: dem
          type: string
        title:
          description: human readable title of the collection
          example: Digital Elevation Model
          type: string
        description:
          description: a description of the data in the collection
          example: A Digital Elevation Model.
          type: string
        links:
          example:
            - href: http://data.example.org/collections/dem?f=json
              rel: self
              type: application/json
              title: Digital Elevation Model
            - href: http://data.example.org/collections/dem?f=html
              rel: alternate
              type: application/json
              title: Digital Elevation Model
            - href: http://data.example.org/collections/dem/coverage
              rel: coverage
              type: image/tiff; application=geotiff
              title: Digital Elevation Model
            - href: http://data.example.org/collections/dem/coverage/domainset
              rel: domainset
              type: application/json
              title: Digital Elevation Model
            - href: http://data.example.org/collections/dem/coverage/rangetype
              rel: rangetype
              type: application/json
              title: Digital Elevation Model
            - href: http://data.example.org/collections/dem/coverage/metadata
              rel: metadata
              type: application/json
              title: Digital Elevation Model
          items:
            $ref: '#/components/schemas/link'
          type: array
        extent:
          $ref: '#/components/schemas/extent-uad'
        itemType:
          default: unknown
          description: "indicator about the type of the items in the collection if\
            \ the collection has an accessible /collections/{collectionId}/items endpoint"
          type: string
        crs:
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: the list of coordinate reference systems supported by the API;
            the first item is the default coordinate reference system
          example:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
            - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            type: string
          type: array
        dataType:
          $ref: '#/components/schemas/collectionInfo_dataType'
        geometryDimension:
          description: "The geometry dimension of the features shown in this layer\
            \ (0: points, 1: curves, 2: surfaces, 3: solids), unspecified: mixed or\
            \ unknown"
          maximum: 3
          minimum: 0
          type: integer
        minScaleDenominator:
          description: Minimum scale denominator for usage of the collection
          type: number
        maxScaleDenominator:
          description: Maximum scale denominator for usage of the collection
          type: number
        minCellSize:
          description: Minimum cell size for usage of the collection
          type: number
        maxCellSize:
          description: Maximum cell size for usage of the collection
          type: number
      required:
        - id
        - links
      type: object
    extent:
      description: |-
        The extent of the data in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.

        The first item in the array describes the overall extent of
        the data. All subsequent items describe more precise extents,
        e.g., to identify clusters of data.
        Clients only interested in the overall extent will only need to
        access the first item in each array.
      properties:
        spatial:
          $ref: '#/components/schemas/extent_spatial'
        temporal:
          $ref: '#/components/schemas/extent_temporal'
      type: object
    extent-uad:
      allOf:
        - $ref: '#/components/schemas/extent'
        - additionalProperties:
            description: The domain intervals for any additional dimensions of the extent
              (envelope) beyond those described in temporal and spatial.
            oneOf:
              - required:
                  - crs
                  - interval
                type: object
              - required:
                  - interval
                  - trs
                type: object
              - required:
                  - interval
                  - vrs
                type: object
            properties:
              interval:
                description: |-
                  One or more intervals that describe the extent for this dimension of the dataset.
                  The value `null` is supported and indicates an unbounded or half-bounded interval.
                  The first interval describes the overall extent of the data for this dimension.
                  All subsequent intervals describe more precise intervals, e.g., to identify clusters of data.
                  Clients only interested in the overall extent will only need
                  to access the first item (a pair of lower and upper bound values).
                items:
                  description: |-
                    Lower and upper bound values of the interval. The values
                    are in the coordinate reference system specified in `crs`, `trs` or `vrs`.
                  example:
                    - 2011-11-11T12:22:11Z
                    - 32.5
                    - null
                  items:
                    oneOf:
                      - nullable: true
                        type: string
                      - type: number
                  maxItems: 2
                  minItems: 2
                  type: array
                minItems: 1
                type: array
              crs:
                description: generic coordinate reference system suitable for any type
                  of dimensions
                type: string
              trs:
                description: temporal coordinate reference system (e.g. as defined by
                  Features for 'temporal')
                type: string
              vrs:
                description: vertical coordinate reference system (e.g. as defined in
                  EDR for 'vertical')
                type: string
              grid:
                description: Provides information about the limited availability of
                  data within the collection organized as a grid (regular or irregular)
                  along the dimension.
                properties:
                  coordinates:
                    description: |-
                      List of coordinates along the temporal dimension for which data organized as an irregular grid in the collection is available
                      (e.g., 2, 10, 80, 100).
                    example:
                      - 2
                      - 10
                      - 80
                      - 100
                    items:
                      oneOf:
                        - nullable: true
                          type: string
                        - type: number
                    minItems: 1
                    type: array
                  cellsCount:
                    description: |-
                      Number of samples available along the dimension for data organized as a regular grid.
                      For values representing the whole area of contiguous cells spanning _resolution_ units along the dimension, this will be (_upperBound_ - _lowerBound_) / _resolution_.
                      For values representing infinitely small point cells spaced by _resolution_ units along the dimension, this will be (_upperBound_ - _lowerBound_) / _resolution_ + 1.
                    example: 50
                    type: integer
                  resolution:
                    description: Resolution of regularly gridded data along the dimension
                      in the collection
                    example:
                      - PT1H
                      - 6.866455078E-4
                    oneOf:
                      - nullable: true
                        type: string
                      - type: number
                type: object
            type: object
          type: object
      description: |-
        The extent module only addresses spatial and temporal extents. This module extends extent by specifying how
        intervals and crs properties can be used to specify additional geometries.
      title: Extent with Uniform Additional Dimensions Schema
    crs:
      oneOf:
        - description: Simplification of the object into a url if the other properties
            are not present
          type: string
        - $ref: '#/components/schemas/crs_oneOf'
      title: CRS
    dataType:
      anyOf:
        - type: string
        - enum:
            - map
            - vector
            - coverage
          type: string
    timeStamp:
      description: This property indicates the time and date when the response was
        generated using RFC 3339 notation.
      example: 2017-08-17T08:05:32Z
      format: date-time
      type: string
    numberReturned:
      description: |-
        The number of features in the feature collection.
        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.
        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      example: 10
      minimum: 0
      type: integer
    numberMatched:
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      example: 127
      minimum: 0
      type: integer
    tileSet:
      description: "A resource describing a tileset based on the OGC TileSet Metadata\
        \ Standard. At least one of the 'TileMatrixSet',  or a link with 'rel' http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme"
      example:
        boundingBox: null
        keywords:
          - keywords
          - keywords
        crs: null
        tileMatrixSetURI: https://openapi-generator.tech
        created: ""
        dataType: null
        description: description
        tileMatrixSetLimits:
          - tileMatrix: tileMatrix
            maxTileRow: 0
            minTileCol: 0
            maxTileCol: 0
            minTileRow: 0
          - tileMatrix: tileMatrix
            maxTileRow: 0
            minTileCol: 0
            maxTileCol: 0
            minTileRow: 0
        epoch: 5.637376656633329
        title: title
        version: version
        centerPoint: null
        license: license
        mediaTypes:
          - mediaTypes
          - mediaTypes
        layers:
          - boundingBox: null
            keywords: keywords
            description: description
            epoch: 7.061401241503109
            title: title
            featureType: featureType
            theme: theme
            links:
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
            id: id
            minTileMatrix: minTileMatrix
            pointOfContact: pointOfContact
            crs: null
            created: ""
            dataType: null
            propertiesSchema: null
            maxTileMatrix: maxTileMatrix
            license: license
            maxScaleDenominator: 3.616076749251911
            minScaleDenominator: 9.301444243932576
            geometryDimension: 0
            maxCellSize: 4.145608029883936
            attribution: attribution
            publisher: publisher
            minCellSize: 2.027123023002322
            style: null
            updated: ""
            geoDataClasses:
              - geoDataClasses
              - geoDataClasses
          - boundingBox: null
            keywords: keywords
            description: description
            epoch: 7.061401241503109
            title: title
            featureType: featureType
            theme: theme
            links:
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
            id: id
            minTileMatrix: minTileMatrix
            pointOfContact: pointOfContact
            crs: null
            created: ""
            dataType: null
            propertiesSchema: null
            maxTileMatrix: maxTileMatrix
            license: license
            maxScaleDenominator: 3.616076749251911
            minScaleDenominator: 9.301444243932576
            geometryDimension: 0
            maxCellSize: 4.145608029883936
            attribution: attribution
            publisher: publisher
            minCellSize: 2.027123023002322
            style: null
            updated: ""
            geoDataClasses:
              - geoDataClasses
              - geoDataClasses
        attribution: attribution
        links:
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
        style: null
        accessConstraints: unclassified
        updated: ""
        pointOfContact: pointOfContact
      properties:
        title:
          description: A title for this tileset
          type: string
        description:
          description: Brief narrative description of this tile set
          type: string
        dataType:
          $ref: '#/components/schemas/tileSet_dataType'
        crs:
          $ref: '#/components/schemas/tileSet_crs'
        tileMatrixSetURI:
          description: Reference to a Tile Matrix Set on an offical source for Tile
            Matrix Sets such as the OGC NA definition server (http://www.opengis.net/def/tms/).
            Required if the tile matrix set is registered on an open official source.
          format: uri
          type: string
        links:
          description: "Links to related resources. Possible link 'rel' values are:\
            \ 'http://www.opengis.net/def/rel/ogc/1.0/dataset' for a URL pointing\
            \ to the dataset, 'item' for a URL template to get a tile; 'alternate'\
            \ for a URL pointing to another representation of the TileSetMetadata\
            \ (e.g a TileJSON file); 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\
            \ for a definition of the TileMatrixSet; 'http://www.opengis.net/def/rel/ogc/1.0/geodata'\
            \ for pointing to a single collection (if the tileset represents a single\
            \ collection)"
          items:
            $ref: '#/components/schemas/link'
          type: array
        tileMatrixSetLimits:
          description: "Limits for the TileRow and TileCol values for each TileMatrix\
            \ in the tileMatrixSet. If missing, there are no limits other that the\
            \ ones imposed by the TileMatrixSet. If present the TileMatrices listed\
            \ are limited and the rest not available at all"
          items:
            $ref: '#/components/schemas/tileMatrixLimits'
          type: array
        epoch:
          description: Epoch of the Coordinate Reference System (CRS)
          type: number
        layers:
          items:
            $ref: '#/components/schemas/geospatialData'
          minItems: 1
          type: array
        boundingBox:
          $ref: '#/components/schemas/tileSet_boundingBox'
        centerPoint:
          $ref: '#/components/schemas/tileSet_centerPoint'
        style:
          $ref: '#/components/schemas/tileSet_style'
        attribution:
          description: Short reference to recognize the author or provider
          type: string
        license:
          description: License applicable to the tiles
          type: string
        accessConstraints:
          default: unclassified
          description: Restrictions on the availability of the Tile Set that the user
            needs to be aware of before using or redistributing the Tile Set
          enum:
            - unclassified
            - restricted
            - confidential
            - secret
            - topSecret
          type: string
        keywords:
          description: keywords about this tileset
          items:
            type: string
          type: array
        version:
          description: Version of the Tile Set. Changes if the data behind the tiles
            has been changed
          type: string
        created:
          allOf:
            - description: When the Tile Set was first produced
              type: object
            - $ref: '#/components/schemas/timeStamp'
        updated:
          allOf:
            - description: Last Tile Set change/revision
              type: object
            - $ref: '#/components/schemas/timeStamp'
        pointOfContact:
          description: Useful information to contact the authors or custodians for
            the Tile Set
          type: string
        mediaTypes:
          description: Media types available for the tiles
          items:
            type: string
          type: array
      required:
        - crs
        - dataType
        - links
      title: Tile Set Metadata
      type: object
    tileSet-item:
      description: A minimal tileset element for use within a list of tilesets linking
        to full description of those tilesets.
      example:
        crs: null
        tileMatrixSetURI: https://openapi-generator.tech
        dataType: null
        links:
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
        title: title
      properties:
        title:
          description: A title for this tileset
          type: string
        dataType:
          $ref: '#/components/schemas/tileSet_dataType'
        crs:
          $ref: '#/components/schemas/tileSet_crs'
        tileMatrixSetURI:
          description: Reference to a Tile Matrix Set on an offical source for Tile
            Matrix Sets such as the OGC NA definition server (http://www.opengis.net/def/tms/).
            Required if the tile matrix set is registered on an open official source.
          format: uri
          type: string
        links:
          description: Links to related resources. A 'self' link to the tileset as
            well as a 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme' link
            to a definition of the TileMatrixSet are required.
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
        - crs
        - dataType
        - links
      title: Tile Set Metadata item
      type: object
    tileMatrixSet:
      description: "A definition of a tile matrix set following the Tile Matrix Set\
        \ standard. For tileset metadata, such a description (in `tileMatrixSet` property)\
        \ is only required for offline use, as an alternative to a link with a `http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme`\
        \ relation type."
      example:
        tileMatrices:
          - keywords:
              - keywords
              - keywords
            scaleDenominator: 0.8008281904610115
            description: description
            tileWidth: 1.1465812980502945
            title: title
            cellSize: 6.027456183070403
            matrixWidth: 1.2302135886934766
            variableMatrixWidths:
              - maxTileRow: 0.3616076749251911
                coalesce: 2.706140124150311
                minTileRow: 0.9301444243932576
              - maxTileRow: 0.3616076749251911
                coalesce: 2.706140124150311
                minTileRow: 0.9301444243932576
            cornerOfOrigin: topLeft
            matrixHeight: 1.5637376656633328
            id: id
            pointOfOrigin: ""
            tileHeight: 1.5962133916683183
          - keywords:
              - keywords
              - keywords
            scaleDenominator: 0.8008281904610115
            description: description
            tileWidth: 1.1465812980502945
            title: title
            cellSize: 6.027456183070403
            matrixWidth: 1.2302135886934766
            variableMatrixWidths:
              - maxTileRow: 0.3616076749251911
                coalesce: 2.706140124150311
                minTileRow: 0.9301444243932576
              - maxTileRow: 0.3616076749251911
                coalesce: 2.706140124150311
                minTileRow: 0.9301444243932576
            cornerOfOrigin: topLeft
            matrixHeight: 1.5637376656633328
            id: id
            pointOfOrigin: ""
            tileHeight: 1.5962133916683183
        boundingBox: null
        orderedAxes:
          - orderedAxes
          - orderedAxes
        keywords:
          - keywords
          - keywords
        crs: null
        description: description
        id: id
        title: title
        uri: https://openapi-generator.tech
        wellKnownScaleSet: https://openapi-generator.tech
      properties:
        title:
          description: "Title of this tile matrix set, normally used for display to\
            \ a human"
          type: string
        description:
          description: "Brief narrative description of this tile matrix set, normally\
            \ available for display to a human"
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s)
            or phrase(s) used to describe this tile matrix set
          items:
            type: string
          type: array
        id:
          description: Tile matrix set identifier. Implementation of 'identifier'
          type: string
        uri:
          description: Reference to an official source for this tileMatrixSet
          format: uri
          type: string
        orderedAxes:
          items:
            type: string
          minItems: 1
          type: array
        crs:
          $ref: '#/components/schemas/tileSet_crs'
        wellKnownScaleSet:
          description: Reference to a well-known scale set
          format: uri
          type: string
        boundingBox:
          $ref: '#/components/schemas/tileSet_boundingBox'
        tileMatrices:
          description: Describes scale levels and its tile matrices
          items:
            $ref: '#/components/schemas/tileMatrix'
          type: array
      required:
        - crs
        - tileMatrices
      title: Tile Matrix Set Definition
      type: object
    tileMatrixSet-item:
      description: A minimal tile matrix set element for use within a list of tile
        matrix sets linking to a full definition.
      example:
        crs: null
        links:
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
        id: id
        title: title
        uri: https://openapi-generator.tech
      properties:
        id:
          description: "Optional local tile matrix set identifier, e.g. for use as\
            \ unspecified `{tileMatrixSetId}` parameter. Implementation of 'identifier'"
          type: string
        title:
          description: "Title of this tile matrix set, normally used for display to\
            \ a human"
          type: string
        uri:
          description: Reference to an official source for this tileMatrixSet
          format: uri
          type: string
        crs:
          $ref: '#/components/schemas/tileSet_crs'
        links:
          description: Links to related resources. A 'self' link to the tile matrix
            set definition is required.
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
        - links
      title: Tile Matrix Set Item
      type: object
    tileMatrixLimits:
      description: "The limits for an individual tile matrix of a TileSet's TileMatrixSet,\
        \ as defined in the OGC 2D TileMatrixSet and TileSet Metadata Standard"
      example:
        tileMatrix: tileMatrix
        maxTileRow: 0
        minTileCol: 0
        maxTileCol: 0
        minTileRow: 0
      properties:
        tileMatrix:
          type: string
        minTileRow:
          minimum: 0
          type: integer
        maxTileRow:
          minimum: 0
          type: integer
        minTileCol:
          minimum: 0
          type: integer
        maxTileCol:
          minimum: 0
          type: integer
      required:
        - maxTileCol
        - maxTileRow
        - minTileCol
        - minTileRow
        - tileMatrix
      title: TileMatrixLimits
      type: object
    "2DPoint":
      description: A 2D Point in the CRS indicated elsewhere
      items:
        type: number
      maxItems: 2
      minItems: 2
      type: array
    "2DBoundingBox":
      description: Minimum bounding rectangle surrounding a 2D resource in the CRS
        indicated elsewhere
      properties:
        lowerLeft:
          description: A 2D Point in the CRS indicated elsewhere
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
        upperRight:
          description: A 2D Point in the CRS indicated elsewhere
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
        crs:
          $ref: '#/components/schemas/crs'
        orderedAxes:
          items:
            type: string
          maxItems: 2
          minItems: 2
          type: array
      required:
        - lowerLeft
        - upperRight
      type: object
    FeatureCollection:
      properties:
        type:
          enum:
            - FeatureCollection
          type: string
        features:
          items:
            $ref: '#/components/schemas/GeoJSON_Feature'
          type: array
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - features
        - type
      title: GeoJSON FeatureCollection
      type: object
    enumeration:
      example:
        type: enum
        enum:
          - enum
          - enum
      properties:
        type:
          enum:
            - enum
          type: string
        enum:
          items:
            type: string
          type: array
      required:
        - enum
        - type
      type: object
    all-collections:
      enum:
        - blueMarble
        - NaturalEarth:raster:HYP_HR_SR_OB_DR
        - NaturalEarth:cultural:ne_10m_admin_0_countries
        - NaturalEarth:physical:bathymetry
        - SRTM_ViewFinderPanorama
        - HRDEM-Ottawa
        - HRDEM-RedRiver
      type: string
    vectorTiles-collections:
      enum:
        - NaturalEarth:cultural:ne_10m_admin_0_countries
        - NaturalEarth:physical:bathymetry
      type: string
    coverage-collections:
      enum:
        - SRTM_ViewFinderPanorama
        - HRDEM-Ottawa
        - HRDEM-RedRiver
      type: string
    styles:
      enum:
        - default
      type: string
    tileMatrixSets:
      enum:
        - WebMercatorQuad
        - WorldCRS84Quad
        - GNOSISGlobalGrid
        - WorldMercatorWGS84Quad
      type: string
    geospatialData:
      example:
        boundingBox: null
        keywords: keywords
        description: description
        epoch: 7.061401241503109
        title: title
        featureType: featureType
        theme: theme
        links:
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
        id: id
        minTileMatrix: minTileMatrix
        pointOfContact: pointOfContact
        crs: null
        created: ""
        dataType: null
        propertiesSchema: null
        maxTileMatrix: maxTileMatrix
        license: license
        maxScaleDenominator: 3.616076749251911
        minScaleDenominator: 9.301444243932576
        geometryDimension: 0
        maxCellSize: 4.145608029883936
        attribution: attribution
        publisher: publisher
        minCellSize: 2.027123023002322
        style: null
        updated: ""
        geoDataClasses:
          - geoDataClasses
          - geoDataClasses
      properties:
        title:
          description: "Title of this tile matrix set, normally used for display to\
            \ a human"
          type: string
        description:
          description: "Brief narrative description of this tile matrix set, normally\
            \ available for display to a human"
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s)
            or phrase(s) used to describe this layer
          type: string
        id:
          description: Unique identifier of the Layer. Implementation of 'identifier'
          type: string
        dataType:
          $ref: '#/components/schemas/geospatialData_dataType'
        geometryDimension:
          description: "The geometry dimension of the features shown in this layer\
            \ (0: points, 1: curves, 2: surfaces, 3: solids), unspecified: mixed or\
            \ unknown"
          maximum: 3
          minimum: 0
          type: integer
        featureType:
          description: Feature type identifier. Only applicable to layers of datatype
            'geometries'
          type: string
        attribution:
          description: Short reference to recognize the author or provider
          type: string
        license:
          description: License applicable to the tiles
          type: string
        pointOfContact:
          description: "Useful information to contact the authors or custodians for\
            \ the layer (e.g. e-mail address, a physical address,  phone numbers,\
            \ etc)"
          type: string
        publisher:
          description: Organization or individual responsible for making the layer
            available
          type: string
        theme:
          description: Category where the layer can be grouped
          type: string
        crs:
          $ref: '#/components/schemas/tileSet_crs'
        epoch:
          description: Epoch of the Coordinate Reference System (CRS)
          type: number
        minScaleDenominator:
          description: Minimum scale denominator for usage of the layer
          type: number
        maxScaleDenominator:
          description: Maximum scale denominator for usage of the layer
          type: number
        minCellSize:
          description: Minimum cell size for usage of the layer
          type: number
        maxCellSize:
          description: Maximum cell size for usage of the layer
          type: number
        maxTileMatrix:
          description: TileMatrix identifier associated with the minScaleDenominator
          type: string
        minTileMatrix:
          description: TileMatrix identifier associated with the maxScaleDenominator
          type: string
        boundingBox:
          $ref: '#/components/schemas/geospatialData_boundingBox'
        created:
          allOf:
            - description: When the layer was first produced
              type: object
            - $ref: '#/components/schemas/timeStamp'
        updated:
          allOf:
            - description: Last layer change/revision
              type: object
            - $ref: '#/components/schemas/timeStamp'
        style:
          $ref: '#/components/schemas/geospatialData_style'
        geoDataClasses:
          description: URI identifying a class of data contained in this layer (useful
            to determine compatibility with styles or processes)
          items:
            type: string
          type: array
        propertiesSchema:
          $ref: '#/components/schemas/geospatialData_propertiesSchema'
        links:
          description: "Links related to this layer. Possible link 'rel' values are:\
            \ 'geodata' for a URL pointing to the collection of geospatial data."
          items:
            $ref: '#/components/schemas/link'
          minItems: 1
          type: array
      required:
        - dataType
        - id
      type: object
    tilePoint:
      properties:
        coordinates:
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
        crs:
          $ref: '#/components/schemas/tilePoint_crs'
        tileMatrix:
          description: TileMatrix identifier associated with the scaleDenominator
          type: string
        scaleDenominator:
          description: Scale denominator of the tile matrix selected
          type: number
        cellSize:
          description: Cell size of the tile matrix selected
          type: number
      required:
        - coordinates
      type: object
    style:
      properties:
        id:
          description: An identifier for this style. Implementation of 'identifier'
          type: string
        title:
          description: A title for this style
          type: string
        description:
          description: Brief narrative description of this style
          type: string
        keywords:
          description: keywords about this style
          items:
            type: string
          type: array
        links:
          description: "Links to style related resources. Possible link 'rel' values\
            \ are: 'style' for a URL pointing to the style description, 'styleSpec'\
            \ for a URL pointing to the specification or standard used to define the\
            \ style."
          items:
            $ref: '#/components/schemas/link'
          minItems: 1
          type: array
      required:
        - id
      type: object
    tileMatrix:
      description: "A tile matrix, usually corresponding to a particular zoom level\
        \ of a TileMatrixSet."
      example:
        keywords:
          - keywords
          - keywords
        scaleDenominator: 0.8008281904610115
        description: description
        tileWidth: 1.1465812980502945
        title: title
        cellSize: 6.027456183070403
        matrixWidth: 1.2302135886934766
        variableMatrixWidths:
          - maxTileRow: 0.3616076749251911
            coalesce: 2.706140124150311
            minTileRow: 0.9301444243932576
          - maxTileRow: 0.3616076749251911
            coalesce: 2.706140124150311
            minTileRow: 0.9301444243932576
        cornerOfOrigin: topLeft
        matrixHeight: 1.5637376656633328
        id: id
        pointOfOrigin: ""
        tileHeight: 1.5962133916683183
      properties:
        title:
          description: "Title of this tile matrix, normally used for display to a\
            \ human"
          type: string
        description:
          description: "Brief narrative description of this tile matrix set, normally\
            \ available for display to a human"
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s)
            or phrase(s) used to describe this dataset
          items:
            type: string
          type: array
        id:
          description: Identifier selecting one of the scales defined in the TileMatrixSet
            and representing the scaleDenominator the tile. Implementation of 'identifier'
          type: string
        scaleDenominator:
          description: Scale denominator of this tile matrix
          type: number
        cellSize:
          description: Cell size of this tile matrix
          type: number
        cornerOfOrigin:
          default: topLeft
          description: "The corner of the tile matrix (_topLeft_ or _bottomLeft_)\
            \ used as the origin for numbering tile rows and columns. This corner\
            \ is also a corner of the (0, 0) tile."
          enum:
            - topLeft
            - bottomLeft
          type: string
        pointOfOrigin:
          allOf:
            - description: "Precise position in CRS coordinates of the corner of origin\
              \ (e.g. the top-left corner) for this tile matrix. This position is\
              \ also a corner of the (0, 0) tile. In previous version, this was 'topLeftCorner'\
              \ and 'cornerOfOrigin' did not exist."
              type: object
            - $ref: '#/components/schemas/2DPoint'
        tileWidth:
          description: Width of each tile of this tile matrix in pixels
          format: integer
          minimum: 1
          multipleOf: 1
          type: number
        tileHeight:
          description: Height of each tile of this tile matrix in pixels
          format: integer
          minimum: 1
          multipleOf: 1
          type: number
        matrixHeight:
          description: Width of the matrix (number of tiles in width)
          format: integer
          minimum: 1
          multipleOf: 1
          type: number
        matrixWidth:
          description: Height of the matrix (number of tiles in height)
          format: integer
          minimum: 1
          multipleOf: 1
          type: number
        variableMatrixWidths:
          description: Describes the rows that has variable matrix width
          items:
            $ref: '#/components/schemas/variableMatrixWidth'
          type: array
      required:
        - cellSize
        - id
        - matrixHeight
        - matrixWidth
        - pointOfOrigin
        - scaleDenominator
        - tileHeight
        - tileWidth
      type: object
    propertiesSchema:
      description: Attributes of the features or rangetypes of a coverage. Defined
        by a subset of the JSON Schema for the properties of a feature
      properties:
        type:
          enum:
            - object
          type: string
        required:
          description: Implements 'multiplicity' by citing property 'name' defined
            as 'additionalProperties'
          items:
            type: string
          minItems: 1
          type: array
        properties:
          additionalProperties:
            $ref: '#/components/schemas/propertiesSchema_properties_value'
          default: {}
          type: object
      required:
        - properties
        - type
      type: object
    variableMatrixWidth:
      description: Variable Matrix Width data structure
      example:
        maxTileRow: 0.3616076749251911
        coalesce: 2.706140124150311
        minTileRow: 0.9301444243932576
      properties:
        coalesce:
          description: Number of tiles in width that coalesce in a single tile for
            these rows
          format: integer
          minimum: 2
          multipleOf: 1
          type: number
        minTileRow:
          description: First tile row where the coalescence factor applies for this
            tilematrix
          format: integer
          minimum: 0
          multipleOf: 1
          type: number
        maxTileRow:
          description: Last tile row where the coalescence factor applies for this
            tilematrix
          format: integer
          minimum: 0
          multipleOf: 1
          type: number
      required:
        - coalesce
        - maxTileRow
        - minTileRow
      type: object
    getConformance_200_response:
      allOf:
        - $ref: '#/components/schemas/confClasses'
      example:
        conformsTo:
          - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
          - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
          - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
          - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
          - http://www.opengis.net/spec/ogcapi-common-2/1.0/conf/collections
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tilesets-list
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/geodata-tilesets
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/dataset-tilesets
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/geodata-selection
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/jpeg
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/png
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/mvt
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/geojson
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tiff
          - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/netcdf
    getCollectionsList_bbox_parameter:
      items:
        format: double
        type: number
      oneOf:
        - maxItems: 4
          minItems: 4
          type: object
        - maxItems: 6
          minItems: 6
          type: object
      type: array
    getTileMatrixSetsList_200_response:
      example:
        tileMatrixSets:
          - crs: null
            links:
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
            id: id
            title: title
            uri: https://openapi-generator.tech
          - crs: null
            links:
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
            id: id
            title: title
            uri: https://openapi-generator.tech
      properties:
        tileMatrixSets:
          items:
            $ref: '#/components/schemas/tileMatrixSet-item'
          type: array
      type: object
    _dataset_vector_getTileSetsList_200_response:
      example:
        tilesets:
          - crs: null
            tileMatrixSetURI: https://openapi-generator.tech
            dataType: null
            links:
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
            title: title
          - crs: null
            tileMatrixSetURI: https://openapi-generator.tech
            dataType: null
            links:
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
              - varBase: /ogcapi/vars/
                hreflang: en
                templated: true
                rel: alternate
                length: 0
                href: http://data.example.com/buildings/123
                type: application/geo+json
                title: "Trierer Strasse 70, 53115 Bonn"
            title: title
        links:
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
          - varBase: /ogcapi/vars/
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/buildings/123
            type: application/geo+json
            title: "Trierer Strasse 70, 53115 Bonn"
      properties:
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
        tilesets:
          items:
            $ref: '#/components/schemas/tileSet-item'
          type: array
      required:
        - tilesets
      type: object
    _dataset_vector_getTile_200_response:
      allOf:
        - format: geojson-feature-collection
          type: object
        - $ref: '#/components/schemas/FeatureCollection'
    collectionInfo_dataType:
      allOf:
        - description: Type of data represented in the collection
          type: object
        - $ref: '#/components/schemas/dataType'
    extent_spatial_bbox_inner:
      description: |-
        Each bounding box is provided as four or six numbers, depending on
        whether the coordinate reference system includes a vertical axis
        (height or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        If the value consists of four numbers, the coordinate reference system is
        WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)
        unless a different coordinate reference system is specified in a parameter `bbox-crs`.

        If the value consists of six numbers, the coordinate reference system is WGS 84
        longitude/latitude/ellipsoidal height (http://www.opengis.net/def/crs/OGC/0/CRS84h)
        unless a different coordinate reference system is specified in a parameter `bbox-crs`.

        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      example:
        - -180
        - -90
        - 180
        - 90
      items:
        type: number
      oneOf:
        - maxItems: 4
          minItems: 4
          type: object
        - maxItems: 6
          minItems: 6
          type: object
      type: array
    extent_spatial_grid_inner_coordinates_inner:
      oneOf:
        - nullable: true
          type: string
        - type: number
    extent_spatial_grid_inner_resolution:
      description: Resolution of regularly gridded data along the dimension in the
        collection
      example: 6.866455078E-4
      oneOf:
        - nullable: true
          type: string
        - type: number
    extent_spatial_grid_inner:
      properties:
        coordinates:
          description: |-
            List of coordinates along the dimension for which data organized as an irregular grid in the collection is available
            (e.g., 2, 10, 80, 100).
          example:
            - 2
            - 10
            - 80
            - 100
          items:
            $ref: '#/components/schemas/extent_spatial_grid_inner_coordinates_inner'
          minItems: 1
          type: array
        cellsCount:
          description: |-
            Number of samples available along the dimension for data organized as a regular grid.
            For values representing the whole area of contiguous cells spanning _resolution_ units along the dimension, this will be (_upperBound_ - _lowerBound_) / _resolution_.
            For values representing infinitely small point cells spaced by _resolution_ units along the dimension, this will be (_upperBound_ - _lowerBound_) / _resolution_ + 1.
          example: 50
          type: integer
        resolution:
          $ref: '#/components/schemas/extent_spatial_grid_inner_resolution'
      type: object
    extent_spatial:
      description: The spatial extent of the data in the collection.
      properties:
        bbox:
          description: |-
            One or more bounding boxes that describe the spatial extent of the dataset.
            In the Core only a single bounding box is supported.

            Extensions may support additional areas.
            The first bounding box describes the overall spatial
            extent of the data. All subsequent bounding boxes describe
            more precise bounding boxes, e.g., to identify clusters of data.
            Clients only interested in the overall spatial extent will
            only need to access the first item in each array.
          items:
            $ref: '#/components/schemas/extent_spatial_bbox_inner'
          minItems: 1
          type: array
        crs:
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: |-
            Coordinate reference system of the coordinates in the spatial extent
            (property `bbox`). The default reference system is WGS 84 longitude/latitude.
            In the Core the only other supported coordinate reference system is
            WGS 84 longitude/latitude/ellipsoidal height for coordinates with height.
            Extensions may support additional coordinate reference systems and add
            additional enum values.
          enum:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
            - http://www.opengis.net/def/crs/OGC/0/CRS84h
          type: string
        grid:
          description: |-
            Provides information about the limited availability of data within the collection organized
            as a grid (regular or irregular) along each spatial dimension.
          items:
            $ref: '#/components/schemas/extent_spatial_grid_inner'
          maxItems: 3
          minItems: 2
          type: array
      type: object
    extent_temporal_grid_resolution:
      description: Resolution of regularly gridded data along the temporal dimension
        in the collection
      example: PT1H
      oneOf:
        - nullable: true
          type: string
        - type: number
    extent_temporal_grid:
      description: Provides information about the limited availability of data within
        the collection organized as a grid (regular or irregular) along the temporal
        dimension.
      properties:
        coordinates:
          description: |-
            List of coordinates along the temporal dimension for which data organized as an irregular grid in the collection is available
            (e.g., "2017-11-14T09:00Z","2017-11-14T12:00Z","2017-11-14T15:00Z","2017-11-14T18:00Z","2017-11-14T21:00Z").
          example:
            - - 2020-11-12T12:15Z
              - 2020-11-12T12:30Z
              - 2020-11-12T12:45Z
          items:
            nullable: true
            type: string
          minItems: 1
          type: array
        cellsCount:
          description: |-
            Number of samples available along the temporal dimension for data organized as a regular grid.
            For values representing the whole area of contiguous cells spanning _resolution_ units along the dimension, this will be (_upperBound_ - _lowerBound_) / _resolution_.
            For values representing infinitely small point cells spaced by _resolution_ units along the dimension, this will be (_upperBound_ - _lowerBound_) / _resolution_ + 1.
          example: 50
          type: integer
        resolution:
          $ref: '#/components/schemas/extent_temporal_grid_resolution'
      type: object
    extent_temporal:
      description: The temporal extent of the features in the collection.
      properties:
        interval:
          description: |-
            One or more time intervals that describe the temporal extent of the dataset.
            In the Core only a single time interval is supported.

            Extensions may support multiple intervals.
            The first time interval describes the overall
            temporal extent of the data. All subsequent time intervals describe
            more precise time intervals, e.g., to identify clusters of data.
            Clients only interested in the overall extent will only need
            to access the first item in each array.
          items:
            description: |-
              Begin and end times of the time interval. The timestamps are in the
              temporal coordinate reference system specified in `trs`. By default
              this is the Gregorian calendar.

              The value `null` for start or end time is supported and indicates a half-bounded time interval.
            example:
              - 2011-11-11T12:22:11Z
              - null
            items:
              format: date-time
              nullable: true
              type: string
            maxItems: 2
            minItems: 2
            type: array
          minItems: 1
          type: array
        trs:
          default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
          description: |-
            Coordinate reference system of the coordinates in the temporal extent
            (property `interval`). The default reference system is the Gregorian calendar.
            In the Core this is the only supported temporal coordinate reference system.
            Extensions may support additional temporal coordinate reference systems and add
            additional enum values.
          enum:
            - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
          type: string
        grid:
          $ref: '#/components/schemas/extent_temporal_grid'
      type: object
    crs_oneOf_oneOf:
      properties:
        uri:
          description: Reference to one coordinate reference system (CRS)
          format: uri
          type: string
      required:
        - uri
      type: object
    crs_oneOf_oneOf_1:
      properties:
        wkt:
          allOf:
            - description: An object defining the CRS using the JSON encoding for Well-known
                text representation of coordinate reference systems 2.0
              type: object
            - type: object
      required:
        - wkt
      type: object
    crs_oneOf_oneOf_2:
      properties:
        referenceSystem:
          description: A reference system data structure as defined in the MD_ReferenceSystem
            of the ISO 19115
          type: object
      required:
        - referenceSystem
      type: object
    crs_oneOf:
      oneOf:
        - $ref: '#/components/schemas/crs_oneOf_oneOf'
        - $ref: '#/components/schemas/crs_oneOf_oneOf_1'
        - $ref: '#/components/schemas/crs_oneOf_oneOf_2'
      type: object
    tileSet_dataType:
      allOf:
        - description: Type of data represented in the tileset
          type: object
        - $ref: '#/components/schemas/dataType'
    tileSet_crs:
      allOf:
        - description: Coordinate Reference System (CRS)
          type: object
        - $ref: '#/components/schemas/crs'
    tileSet_boundingBox:
      allOf:
        - description: "Minimum bounding rectangle surrounding the tile matrix set,\
          \ in the supported CRS"
          type: object
        - $ref: '#/components/schemas/2DBoundingBox'
    tileSet_centerPoint:
      allOf:
        - description: Location of a tile that nicely represents the tileset. Implementations
            may use this center value to set the default location or to present a representative
            tile in a user interface
          type: object
        - $ref: '#/components/schemas/tilePoint'
    tileSet_style:
      allOf:
        - description: Style involving all layers used to generate the tileset
          type: object
        - $ref: '#/components/schemas/style'
    GeoJSON_Feature_id:
      oneOf:
        - type: number
        - type: string
    GeoJSON_Point:
      nullable: true
      properties:
        type:
          enum:
            - Point
          type: string
        coordinates:
          items:
            type: number
          minItems: 2
          type: array
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - coordinates
        - type
      title: GeoJSON Point
      type: object
    GeoJSON_LineString:
      properties:
        type:
          enum:
            - LineString
          type: string
        coordinates:
          items:
            items:
              type: number
            minItems: 2
            type: array
          minItems: 2
          type: array
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - coordinates
        - type
      title: GeoJSON LineString
      type: object
    GeoJSON_Polygon:
      properties:
        type:
          enum:
            - Polygon
          type: string
        coordinates:
          items:
            items:
              items:
                type: number
              minItems: 2
              type: array
            minItems: 4
            type: array
          type: array
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - coordinates
        - type
      title: GeoJSON Polygon
      type: object
    GeoJSON_MultiPoint:
      properties:
        type:
          enum:
            - MultiPoint
          type: string
        coordinates:
          items:
            items:
              type: number
            minItems: 2
            type: array
          type: array
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - coordinates
        - type
      title: GeoJSON MultiPoint
      type: object
    GeoJSON_MultiLineString:
      properties:
        type:
          enum:
            - MultiLineString
          type: string
        coordinates:
          items:
            items:
              items:
                type: number
              minItems: 2
              type: array
            minItems: 2
            type: array
          type: array
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - coordinates
        - type
      title: GeoJSON MultiLineString
      type: object
    GeoJSON_MultiPolygon:
      properties:
        type:
          enum:
            - MultiPolygon
          type: string
        coordinates:
          items:
            items:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 4
              type: array
            type: array
          type: array
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - coordinates
        - type
      title: GeoJSON MultiPolygon
      type: object
    GeoJSON_Feature_geometry:
      oneOf:
        - $ref: '#/components/schemas/GeoJSON_Point'
        - $ref: '#/components/schemas/GeoJSON_LineString'
        - $ref: '#/components/schemas/GeoJSON_Polygon'
        - $ref: '#/components/schemas/GeoJSON_MultiPoint'
        - $ref: '#/components/schemas/GeoJSON_MultiLineString'
        - $ref: '#/components/schemas/GeoJSON_MultiPolygon'
    GeoJSON_Feature:
      properties:
        type:
          enum:
            - Feature
          type: string
        id:
          $ref: '#/components/schemas/GeoJSON_Feature_id'
        properties:
          nullable: true
          type: object
        geometry:
          $ref: '#/components/schemas/GeoJSON_Feature_geometry'
        bbox:
          items:
            type: number
          minItems: 4
          type: array
      required:
        - geometry
        - properties
        - type
      title: GeoJSON Feature
      type: object
    geospatialData_dataType:
      allOf:
        - description: Type of data represented in the layer
          type: object
        - $ref: '#/components/schemas/dataType'
    geospatialData_boundingBox:
      allOf:
        - description: Minimum bounding rectangle surrounding the layer
          type: object
        - $ref: '#/components/schemas/2DBoundingBox'
    geospatialData_style:
      allOf:
        - description: Style used to generate the layer in the tileset
          type: object
        - $ref: '#/components/schemas/style'
    geospatialData_propertiesSchema:
      allOf:
        - description: Properties represented by the features in this layer. Can be
            the attributes of a feature dataset (datatype=geometries) or the rangeType
            of a coverage (datatype=coverage)
          type: object
        - $ref: '#/components/schemas/propertiesSchema'
    tilePoint_crs:
      allOf:
        - description: Coordinate Reference System (CRS) of the coordinates
          type: object
        - $ref: '#/components/schemas/crs'
    propertiesSchema_properties_value:
      description: No property names are defined but any property name they should
        be described by JSON Schema. So 'additionalProperties' implements 'name'.
      properties:
        title:
          type: string
        description:
          description: Implements 'description'
          type: string
        type:
          enum:
            - array
            - boolean
            - integer
            - "null"
            - number
            - object
            - string
          type: string
        enum:
          description: Implements 'acceptedValues'
          items:
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        format:
          description: Complements implementation of 'type'
          type: string
        contentMediaType:
          description: Implements 'mediaType'
          type: string
        maximum:
          description: Implements 'range'
          type: number
        exclusiveMaximum:
          description: Implements 'range'
          type: number
        minimum:
          description: Implements 'range'
          type: number
        exclusiveMinimum:
          description: Implements 'range'
          type: number
        pattern:
          format: regex
          type: string
        maxItems:
          description: Implements 'upperMultiplicity'
          minimum: 0
          type: integer
        minItems:
          default: 0
          description: Implements 'lowerMultiplicity'
          minimum: 0
          type: integer
        observedProperty:
          type: string
        observedPropertyURI:
          format: uri
          type: string
        uom:
          type: string
        uomURI:
          format: uri
          type: string
      type: object
